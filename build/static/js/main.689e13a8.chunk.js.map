{"version":3,"sources":["components/pages/SearchResultPage.module.css","store/reducers/testReducer.js","store/actionCreators/auth.js","components/FindInput.js","store/reducers/userReducer.js","components/Header.js","components/pages/mainPage/MoviesList.js","store/actionCreators/getPopular.js","components/pages/mainPage/consts.js","components/pages/mainPage/MainPage.js","store/actionCreators/getNowPlaying.js","components/Footer.js","components/pages/FilmReviewPage.js","store/actionCreators/getFilm.js","store/actionCreators/getImage.js","components/pages/films/BestFilms.js","components/pages/films/Expected.js","components/pages/films/PopularFilms.js","components/pages/films/WatchNow.js","components/pages/men/PopularMen.js","components/pages/serials/BestSerials.js","components/pages/serials/Live.js","components/pages/serials/OnTv.js","components/pages/serials/PopularSerials.js","components/pages/more/Api.js","components/pages/more/Discussions.js","components/pages/more/HallofFame.js","components/pages/more/Support.js","hooks/useQuery.js","store/actionCreators/getUser.js","store/actionCreators/successfulAuth.js","Login.js","store/actionCreators/checkUserAuth.js","components/pages/SearchResultPage.js","store/actionCreators/getFound.js","components/Profile.js","components/LoggedOrNo.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["module","exports","testReducer","createSlice","name","initialState","popular","image","person","nowPlaying","film","token","findValue","foundFilm","reducers","setPopular","state","payload","setNowPlaying","setImage","id","setPerson","setFilm","setToken","setFindValue","setFoundFilm","actions","setUser","setHeaderSearchButton","auth","dispatch","axios","get","then","responce","data","request_token","window","location","assign","FindInput","props","inputRef","useRef","buttonRef","useDispatch","setInputValue","useCallback","current","value","className","ref","style","styles","placeholder","buttonDivStyles","to","buttonStyles","onClick","userReducer","selectUser","search","viewBox","fill","d","profile","cross","Header","useSelector","useState","displaySearch","setDisplaySearch","login","logged","useMemo","dispatchSetUser","removeSessionID","localStorage","removeItem","toggleDisplaySearch","src","alt","href","color","backgroundColor","borderRadius","MoviesList","movies","renderPoTvFilms","results","map","element","index","poster_path","vote_average","title","release_date","POPULAR_MOVIES_CATEGORIES","MainPage","popularCategory","setPopularCategory","setPoTvCategory","setVKinoCategory","poTvMovies","selectNowPlaying","vKinoMovies","selectPopular","useEffect","Footer","PopularFilmPage","useParams","selectFilm","selectImage","getFilm","getImage","qqqq","posters","file_path","substring","genres","item","runtime","tagline","overview","BestFilms","minHeight","Discussions","HallofFame","useQuery","URLSearchParams","useLocation","getUser","getItem","successfulAuth","post","success","setItem","session_id","Login","query","SearchResultPage","selectFindValue","selectFoundFilm","endpoint","container","borderTop","borderBottom","filmsContainer","e","filmContainer","poster","titleContainer","review","Profile","user","finalEntries","Object","entries","String","LoggedOrNo","children","App","exact","path","component","FilmReviewPage","Expected","PopularFilms","WatchNow","PopularMen","Live","OnTv","PopularSerials","Api","Support","BestSerials","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.689e13a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"SearchResultPage_poster__3s5T9\",\"container\":\"SearchResultPage_container__1TXvv\",\"filmsContainer\":\"SearchResultPage_filmsContainer__1IGk7\",\"filmContainer\":\"SearchResultPage_filmContainer__2psWy\",\"titleContainer\":\"SearchResultPage_titleContainer___Sl0W\",\"title\":\"SearchResultPage_title__JvJYk\",\"review\":\"SearchResultPage_review__qZYSs\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst testReducer = createSlice({\r\n   name: 'test',\r\n   initialState: {\r\n      popular: {},\r\n      image: {},\r\n      person: {},\r\n      nowPlaying: {},\r\n      film: {},\r\n      token: {},\r\n      findValue: \"\",\r\n      foundFilm: {},\r\n   },\r\n   reducers: {\r\n      setPopular: (state, { payload }) => {\r\n         state.popular = payload\r\n      },\r\n      setNowPlaying: (state, { payload }) => {\r\n         state.nowPlaying = payload\r\n      },\r\n      setImage: (state, { payload }) => {\r\n         state.image[payload.id] = payload\r\n      },\r\n      setPerson: (state, { payload }) => {\r\n         state.person[payload.id] = payload\r\n      },\r\n      setFilm: (state, { payload }) => {\r\n         state.film[payload.id] = payload\r\n      },\r\n      setToken: (state, { payload }) => {\r\n         state.token = payload\r\n      },\r\n      setFindValue: (state, { payload }) => {\r\n         state.findValue = payload\r\n      },\r\n      setFoundFilm: (state, { payload }) => {\r\n         state.foundFilm = payload\r\n      },\r\n   },\r\n})\r\n\r\nexport const { setPopular, setImage, setNowPlaying, setFilm, setPerson, setToken, setUser, setFindValue, setFoundFilm, setHeaderSearchButton } = testReducer.actions\r\nexport const selectPopular = (state) => state.testReducer.popular\r\nexport const selectNowPlaying = (state) => state.testReducer.nowPlaying\r\nexport const selectImage = (state, id) => state.testReducer.image[id]\r\nexport const selectPerson = (state, id) => state.testReducer.person[id]\r\nexport const selectFilm = (state, id) => state.testReducer.film[id]\r\nexport const selectToken = (state) => state.testReducer.token\r\nexport const selectFindValue = (state) => state.testReducer.findValue\r\nexport const selectFoundFilm = (state) => state.testReducer.foundFilm\r\n\r\nexport default testReducer.reducer\r\n","import axios from 'axios' \r\nimport { setToken } from '../reducers/testReducer'\r\n//1//\r\nconst auth = () => (dispatch) => {\r\n    axios\r\n        .get(              // получаем токен // \r\n            `https://api.themoviedb.org/3/authentication/token/new?api_key=f0d7e41686782ec02dbe7d4d333bce05`\r\n        )\r\n        .then((responce) => {         // пушим токен в редакс // \r\n            dispatch(setToken(responce.data.request_token)) // токен на мнгнование появляется в редаксе и служит для редиректа,после пропадает //  \r\n            window.location.assign(`https://www.themoviedb.org/authenticate/${responce.data.request_token}?redirect_to=http://localhost:3000/login`)\r\n        })  // отсылаем пользователя на tmdb, где он пытается залогинится , после чего его редеректит на мою страницу логина // \r\n}\r\n\r\nexport default auth","import React, { useRef, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { setFindValue } from '../store/reducers/testReducer';\r\n\r\nfunction FindInput(props) {\r\n    const inputRef = useRef()\r\n    const buttonRef = useRef()\r\n    const dispatch = useDispatch()\r\n\r\n    const setInputValue = useCallback(() => dispatch(setFindValue(inputRef.current.value)), [inputRef])\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"searchDiv\">\r\n                <input className=\"findFilm\" ref={inputRef} style={props.styles}\r\n                    placeholder=\"Найти фильм,сериал,персону...\" />\r\n                <div className=\"findFilmButton\" style={props.buttonDivStyles}>\r\n                    <Link to=\"/SearchResultPage\">\r\n                        <div className=\"findFilmButtonText\" style={props.buttonStyles}\r\n                            ref={buttonRef}\r\n                            onClick={setInputValue}>\r\n                            <span>Search</span>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default FindInput;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst userReducer = createSlice({\r\n    name: 'test',\r\n    initialState: {\r\n        data: null,\r\n    },\r\n    reducers: {\r\n        setUser: (state, { payload }) => {\r\n            state.data = payload\r\n        }\r\n    },\r\n})\r\n\r\nexport const { setUser } = userReducer.actions\r\nexport const selectUser = (state) => state.userReducer.data\r\n\r\nexport default userReducer.reducer\r\n","import { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport auth from \"../store/actionCreators/auth\"\r\nimport FindInput from './FindInput';\r\nimport { useState, useMemo, useCallback } from 'react';\r\nimport { setUser, selectUser } from '../store/reducers/userReducer';\r\n\r\nconst logo = \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\"\r\nconst search = <svg className=\"search\" viewBox=\"0 0 24 24\">\r\n    <path fill=\"currentColor\" d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\r\n</svg>\r\nconst profile = <svg className=\"search\" viewBox=\"0 0 24 24\">\r\n    <path fill=\"currentColor\" d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,8.39C13.57,9.4 15.42,10 17.42,10C18.2,10 18.95,9.91 19.67,9.74C19.88,10.45 20,11.21 20,12C20,16.41 16.41,20 12,20C9,20 6.39,18.34 5,15.89L6.75,14V13A1.25,1.25 0 0,1 8,11.75A1.25,1.25 0 0,1 9.25,13V14H12M16,11.75A1.25,1.25 0 0,0 14.75,13A1.25,1.25 0 0,0 16,14.25A1.25,1.25 0 0,0 17.25,13A1.25,1.25 0 0,0 16,11.75Z\" />\r\n</svg>\r\nconst cross = <svg className=\"search\" viewBox=\"0 0 24 24\">\r\n    <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n</svg>\r\n\r\nfunction Header(props) {\r\n    const dispatch = useDispatch()\r\n    const data = useSelector((state) => selectUser(state))\r\n    const [displaySearch, setDisplaySearch] = useState(false)\r\n\r\n    const login = useCallback(() => dispatch(auth()), [])\r\n    const logged = useMemo(() => data ? data.id : false, [data])\r\n    const dispatchSetUser = useCallback(() => dispatch(setUser()), [])\r\n    const removeSessionID = useCallback(() => localStorage.removeItem(\"sessionId\"), [])\r\n    const toggleDisplaySearch = useCallback(() => setDisplaySearch(!displaySearch), [displaySearch])\r\n\r\n    return (\r\n        <div className=\"headerContainer\">\r\n            <div className=\"headerContainerLeft\">\r\n                <div className=\"logoDiv\">\r\n                    <a >\r\n                        <Link to=\"/\">   <img className=\"logo\" src={logo} alt=\"\" /> </Link>\r\n                    </a>\r\n                </div>\r\n                <div className=\"headerContainerLeftFilms\"   >\r\n                    <a href=\"#\">Фильмы</a>\r\n                    <div className=\"popit\" >\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/PopularFilms\">Популярные</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/WatchNow\">Смотрят сейчас</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/Expected\">Ожидаемые</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link style={{ color: \"#FFE773\" }} to=\"/BestFilms\">Лучшие</Link></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"headerContainerLeftSerials\" >\r\n                    <a href=\"#\">Сериалы</a>\r\n                    <div className=\"popit\" >\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/PopularSerials\">Популярные</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/Live\">В эфире сегодня</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/OnTv\">По телевидению</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link style={{ color: \"#FFE773\" }} to=\"/BestSerials\">Лучшие</Link></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"headerContainerLeftMen\" >\r\n                    <a href=\"#\">Люди </a>\r\n                    <div className=\"popitPopularMen\">\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/PopularMen\">Популярные люди</Link></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"headerContainerLeftMore\" >\r\n                    <a href=\"#\">Ещё</a>\r\n                    <div className=\"popit\">\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/Discussions\" style={{ color: \"#FFE773\" }}>Обсуждения</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/HallofFame\">Доска почета</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/Support\">Поддержка</Link></div>\r\n                        <div className=\"popitFilmsElem\"> <Link to=\"/Api\">API</Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"headerContainerRight\">\r\n                {\r\n                    !logged && <div className=\"login\" onClick={login} >\r\n                        <a href=\"#\"> Войти</a>\r\n                    </div>\r\n                }\r\n                {\r\n                    logged && < div className=\"login\" onClick={dispatchSetUser} >\r\n                        <a href=\"#\" onClick={removeSessionID}> Выйти</a>\r\n                    </div>\r\n                }\r\n                <Link to=\"/profile\"><div className={data ? \"headerUserLogoLogged\" : \"headerUserLogoUnlogged\"} >{profile}</div></Link>\r\n\r\n\r\n                <div><a href=\"#\" onClick={toggleDisplaySearch}>{displaySearch ? cross : search}</a></div>\r\n\r\n            </div>\r\n            {\r\n                displaySearch && <div className='HeaderFindInput'>\r\n                    < FindInput styles={{ backgroundColor: \"white\", borderRadius: 0, }}\r\n                        buttonStyles={{ color: \"black\" }}\r\n                        buttonDivStyles={{ borderRadius: 0 }}\r\n                    />\r\n                </div>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from 'react-router-dom';\r\nimport { useMemo} from 'react';\r\n\r\nexport default function MoviesList({ movies }) {  \r\n    const renderPoTvFilms = useMemo(() => movies.results ? movies.results.map((element, index) =>\r\n        <Link to={\"/movies/\" + element.id} key={index}>\r\n            <div className=\"FilmInfoContainer\" >\r\n                <div className=\"popularImgDiv\" >\r\n                    <img className=\"popularImg\" src={\"https://image.tmdb.org/t/p/original\" + element.poster_path} />\r\n                    <div className=\"popularVoitCircle\">{element.vote_average * 10}</div>\r\n                    <div className=\"popularTitle\">{element.title}</div>\r\n                    <div className=\"popularFilmReleaseData\">{element.release_date}</div>\r\n                </div>\r\n            </div>\r\n        </Link>)\r\n        : \"loading...\", [movies.results])\r\n    // const qwe = image ? image.posters[0].file_path : \"just image\" /* /cgvpApTCyGsms9EMUQzx6xGTRDq.png */\r\n    //  const qqqq = \"https://image.tmdb.org/t/p/original\" + qwe  //\r\n    return (\r\n        <div className=\"popularLane\">\r\n            <div className=\"FilmsInfoContainer\">\r\n                {renderPoTvFilms}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios'\r\nimport { setPopular } from '../reducers/testReducer'\r\n\r\nexport const getPopular = () => (dispatch) => {\r\n   axios\r\n      .get(\r\n         `https://api.themoviedb.org/3/movie/popular?api_key=f0d7e41686782ec02dbe7d4d333bce05`\r\n      )\r\n      .then((responce) => {\r\n         dispatch(setPopular(responce.data))\r\n      })\r\n}\r\n","export const POPULAR_MOVIES_CATEGORIES = {POTV:'potv',VKINO:'vkino'}\r\n","import { useState, useCallback, useEffect } from \"react\"\r\nimport FindInput from \"../../FindInput\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport { getPopular } from \"../../../store/actionCreators/getPopular\";\r\nimport { getNowPlaying } from \"../../../store/actionCreators/getNowPlaying\";\r\nimport {useSelector , useDispatch} from 'react-redux'\r\nimport {selectNowPlaying , selectPopular} from '../../../store/reducers/testReducer'\r\nimport {POPULAR_MOVIES_CATEGORIES} from './consts' \r\n\r\nexport default function MainPage(props) {\r\n    const dispatch = useDispatch()\r\n    const [popularCategory, setPopularCategory] = useState(POPULAR_MOVIES_CATEGORIES.POTV)\r\n\r\n    const setPoTvCategory = useCallback(() => setPopularCategory(POPULAR_MOVIES_CATEGORIES.POTV), [])\r\n    const setVKinoCategory = useCallback(() => setPopularCategory(POPULAR_MOVIES_CATEGORIES.VKINO), [])\r\n    const poTvMovies =  useSelector((state) => selectNowPlaying(state))\r\n    const vKinoMovies =  useSelector((state) => selectPopular(state))\r\n\r\n    useEffect(()=>{\r\n    if ( popularCategory === POPULAR_MOVIES_CATEGORIES.POTV ){dispatch(getNowPlaying())}\r\n    else{dispatch(getPopular())}\r\n\r\n    }\r\n    ,[popularCategory])\r\n\r\n    return (\r\n        <div className=\"mainPageContainer\">\r\n            <div className=\"welcomeContainer\">\r\n                <div className=\"welcomeContent\">\r\n                    <div className=\"title\">\r\n                        <h2>Добро пожаловать</h2>\r\n                        <h3>Миллионы фильмов,сериалов и людей.Исследуйте сейчас</h3>\r\n                    </div>\r\n                    <FindInput  />\r\n                </div>\r\n            </div>\r\n            <div className=\"popular\">\r\n                <div className=\"popularHeader\">\r\n                    <div className=\"watPop\">Что популярно</div>\r\n                    <button className=\"bt\" onClick={setPoTvCategory}>  По тв </button>\r\n                    <button className=\"bt\" onClick={setVKinoCategory}>   В кино </button>\r\n                </div>\r\n                <div>\r\n                    <MoviesList movies={popularCategory===POPULAR_MOVIES_CATEGORIES.POTV?poTvMovies:vKinoMovies}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","\r\nimport axios from 'axios'\r\nimport { setNowPlaying } from '../reducers/testReducer'\r\n\r\nexport const   getNowPlaying = () => (dispatch) => {\r\n   axios\r\n      .get(\r\n         `https://api.themoviedb.org/3/movie/now_playing?api_key=f0d7e41686782ec02dbe7d4d333bce05`\r\n      )\r\n      .then((responce) => {\r\n         dispatch(setNowPlaying(responce.data))  \r\n      })\r\n}\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footerContainer\">\r\n            <div className=\"footerContainerElem\">\r\n                <img className=\"footerLogo\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"footerContainerElem\">\r\n                <div className=\"FooterDivTitile\">ГЛАВНОЕ</div>\r\n                <div>Связаться с нами</div>\r\n                <div>Форумы</div>\r\n                <div>API</div>\r\n                <div>Статус системы</div>\r\n            </div>\r\n            <div className=\"footerContainerElem\">\r\n                <div className=\"FooterDivTitile\">УЧАСТВУЙТЕ</div>\r\n                <div>Писание об участии</div>\r\n                <div>Сторонние приложения</div>\r\n                <div>Добавить новый фильм</div>\r\n                <div>Добавить новый сериал</div>\r\n            </div >\r\n            <div className=\"footerContainerElem\">\r\n                <div className=\"FooterDivTitile\">СООБЩЕСТВО</div>\r\n                <div>Руководства</div>\r\n                <div>Обсуждения</div>\r\n                <div>Доска почета</div>\r\n                <div>Twitter</div>\r\n            </div>\r\n            <div className=\"footerContainerElem\">\r\n                <div className=\"FooterDivTitile\">О ПРАВЕ</div>\r\n                <div>Условия использования</div>\r\n                <div>API правила использования</div>\r\n                <div>Политика конфиденциальности</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFilm } from \"../../store/actionCreators/getFilm\"\r\nimport { getImage } from \"../../store/actionCreators/getImage\"\r\nimport { selectFilm, selectImage } from \"../../store/reducers/testReducer\"\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function PopularFilmPage() {\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams()\r\n    const data = useSelector((state) => selectFilm(state, id))\r\n    const image = useSelector((state) => selectImage(state, id))\r\n\r\n    useEffect(() => {\r\n        dispatch(getFilm(id))\r\n        dispatch(getImage(id))\r\n\r\n\r\n    }, [])\r\n\r\n    const qwe = image ? image.posters[0].file_path : \"just image\" /* /cgvpApTCyGsms9EMUQzx6xGTRDq.png */\r\n    const qqqq = \"https://image.tmdb.org/t/p/original\" + qwe\r\n\r\n    return (\r\n        <div className=\"InfoContainer\">\r\n            <div className=\"InfoContainer\">\r\n                <div className=\"imgInfo\">\r\n                    < img className=\"filmPoster\" src={qqqq} alt=\"\" />\r\n                </div>\r\n                <div className=\"textInfo\">\r\n                    <div className=\"textInfoTop\">\r\n                        <div>\r\n                            {data ? data.title : \"just data\"}  ({data ? data.release_date.substring(0, 4) : \"loading...\"})\r\n                        </div>\r\n                        <div className=\"genresContainer\">\r\n                            {data ? data.genres.map((item,index )=> <div key={index} className=\"genres\">{item.name}</div>) : \"loading...\"}\r\n                            <div>\r\n                                {data ? data.runtime + \"m\" : \"loading...\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"circleDiv\">\r\n                        <div className=\"PFPageVoitCircle\">\r\n                            {data ? data.vote_average * 10 : \"loading...\"}\r\n                        </div>\r\n                        <div className=\"ps\">\r\n                            <div> Пользовательский  </div>\r\n                            <div>счёт   </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tagline\">\r\n                        {data ? data.tagline : \"loading...\"}\r\n                    </div>\r\n                    <div>\r\n                        Обзор\r\n                    </div>\r\n                    <div className=\"overview\">\r\n                        {data ? data.overview : \"loading...\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios'\r\nimport { setFilm } from '../reducers/testReducer'\r\n\r\nexport const getFilm = (id) => (dispatch) => {\r\n   axios\r\n      .get(\r\n         `https://api.themoviedb.org/3/movie/${id}?api_key=f0d7e41686782ec02dbe7d4d333bce05`\r\n      )\r\n      .then((responce) => {\r\n         dispatch(setFilm(responce.data))\r\n      })\r\n}\r\n","import axios from 'axios'\r\nimport { setImage } from '../reducers/testReducer'\r\n\r\nexport const getImage = (id) => (dispatch) => {\r\n   axios\r\n      .get(\r\n         `https://api.themoviedb.org/3/movie/${id}/images?api_key=f0d7e41686782ec02dbe7d4d333bce05`\r\n      )\r\n      .then((responce) => {\r\n         dispatch(setImage(responce.data))\r\n      })\r\n}\r\n","function BestFilms() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            best films \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BestFilms;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{ minHeight: 500 }}>\r\n            expected\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            popular films \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            watch now \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            popular men\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            best Serials\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            live\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions(props) {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            on TV\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions(props) {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            popular Serials\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{ minHeight: 500 }} >\r\n            api\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function Discussions() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            discussions\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","function HallofFame() {\r\n    return (\r\n        <div style={{minHeight:500}}>\r\n            hall of Fame\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HallofFame;\r\n","function Discussions() {\r\n    return (\r\n        <div  style={{minHeight:500}}>\r\n            support\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discussions;\r\n","import { useLocation } from \"react-router-dom\";\r\n// 2 //\r\n// useLocation() - возвращает объект , поле search содержит весь url после  ? \r\n// http://localhost:3000/login?request_token=89509bf205f46d72516e0bca0f151536da21511b&approved=true \r\n// useLocation().search =  ?request_token=89509bf205f46d72516e0bca0f151536da21511b&approved=true \r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);      // данный метод позволяет получать необходимые значения query- параметров \r\n                                                           //  approved=true\r\n                                             // query.get(\"approved \") = true  , query.get(\"request_token\") = 89509bf205f46d72516e0bca0f151536da21511b\r\n\r\n}\r\n\r\nexport default useQuery;","import axios from 'axios'\r\nimport { setUser } from \"../reducers/userReducer\"\r\n// 5 // \r\nexport const getUser = () => (dispatch) => {\r\n    axios         // отправляем запрос , указывая наш session_id \r\n        .get(\r\n            `https://api.themoviedb.org/3//account/new?api_key=f0d7e41686782ec02dbe7d4d333bce05&session_id=${localStorage.getItem(\"sessionId\")}`\r\n        )\r\n        .then((responce) => {    // получаем объект, содержащий информацию о пользователе\r\n            dispatch(setUser(responce.data)) // пушим его в редакс \r\n        })\r\n}\r\n\r\nexport default getUser\r\n","import axios from 'axios'\r\nimport getUser from \"./getUser\"\r\n// http://localhost:3000/login?request_token=4bef194f0cdf7573052fd4b0585fa88faee43782&approved=true // \r\n// 4// \r\n                        // берём токен // \r\nexport const successfulAuth = (token) => (dispatch) => { \r\n    axios\r\n        .post(      \r\n            `https://api.themoviedb.org/3/authentication/session/new?api_key=f0d7e41686782ec02dbe7d4d333bce05`,\r\n            {\r\n                request_token: token       // отправляем токен // \r\n            }\r\n        )    // после отправки токена приходит объект // \r\n        .then((responce) => {\r\n                                        // елси поле  success = true (логин произошёл успешно), то пушим session_id в localstorage)\r\n            if (responce.data.success) {\r\n                localStorage.setItem(\"sessionId\", responce.data.session_id)\r\n                dispatch(getUser())\r\n            }\r\n        })\r\n}\r\n\r\nexport default successfulAuth\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport useQuery from \"./hooks/useQuery\"\r\nimport successfulAuth from \"./store/actionCreators/successfulAuth\"\r\nimport { Redirect } from \"react-router-dom\"\r\n// 3 //\r\n// тут мы берём токен и проверяем успешность логина , с помощью url адреса \r\nexport default function Login() {\r\n    const query = useQuery()                    // после редеректа с tmdb появляется либо \r\n    const dispatch = useDispatch()            //http://localhost:3000/login?request_token=1feb6dc5e0c102af5c63aa53fda7aa9c00821285&approved=true \r\n                                               // либо  \r\n    useEffect(() => {                         //http://localhost:3000/login?request_token=4ccbe4bfa06ec3f5510ae2c27e6f9853d8680bf8&denied=true                 \r\n        if (query.get(\"approved\")) {          // если approved=true , то мы берём из адреса значение request_token`a и передаём его в метод sucAuth\r\n            dispatch(successfulAuth(query.get(\"request_token\")))\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"loginCont\">\r\n            <Redirect to=\"/\" />\r\n        </div>\r\n    )\r\n}\r\n","import getUser from './getUser'\r\n// 6 // \r\nexport const checkUserAuth = (id) => (dispatch) => {\r\n    if (localStorage.getItem(\"sessionId\")) {  // если в localStorage есть session_id \r\n        dispatch(getUser())                   // то мы отправляем запрос , который использует sessiond_id и получаем информацию о User`e\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { selectFindValue, selectFoundFilm } from '../../store/reducers/testReducer';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getFound } from '../../store/actionCreators/getFound';\r\nimport styles from \"./SearchResultPage.module.css\"\r\nimport FindInput from '../FindInput';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SearchResultPage(props) {\r\n    const dispatch = useDispatch()\r\n    const value = useSelector((state) => selectFindValue(state))\r\n    const data = useSelector((state) => selectFoundFilm(state))\r\n    useEffect(() => (dispatch(getFound(value))))\r\n\r\n    const poster = \"https://image.tmdb.org/t/p/original/\"\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <FindInput styles={{ borderTop: \"3px solid #FFB273\", borderBottom: \"3px solid #FFB273\", borderRadius: 0 }}\r\n                buttonStyles={{ color: \"black\", borderRadius: 0, backgroundColor: \"#FFB273\" }}\r\n                buttonDivStyles={{ borderRadius: 0, backgroundColor: \"white\" }} />\r\n            <div className={styles.filmsContainer}>\r\n                {data.results ? data.results.map((e, index) =>\r\n                    <div className={styles.filmContainer} key={index}>\r\n                        <Link to={\"/movies/\" + e.id} >     <img className={styles.poster} src={`${poster}${e.poster_path}`} alt=\"noPoster(\" /> </Link>\r\n                        <div className={styles.titleContainer}>\r\n                            <div className={styles.title}> <Link to={\"/movies/\" + e.id} >{e.title}</Link>  </div>\r\n                            <div className={styles.review}> {e.overview}  </div>\r\n                        </div>\r\n                    </div>) : \"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResultPage;\r\n","import axios from 'axios'\r\nimport { setFoundFilm } from '../reducers/testReducer'\r\n\r\nexport const getFound = (search) => (dispatch) => {\r\n    const api = `&api_key=f0d7e41686782ec02dbe7d4d333bce05 `\r\n    const endpoint = `https://api.themoviedb.org/3/search/movie?query=${search}${api}`;\r\n\r\n    axios\r\n        .get(\r\n            endpoint\r\n        )\r\n        .then((responce) => {\r\n            dispatch(setFoundFilm(responce.data))\r\n        })\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from \"../store/reducers/userReducer\"\r\n\r\nfunction Profile(props) {\r\n    const user = useSelector((state) => selectUser(state))\r\n    const entries = Object.entries(user)\r\n    const finalEntries = entries\r\n \r\n    return (\r\n        <div style={{ minHeight: 500 }}>\r\n            {finalEntries.map((e, index) => <div key={index}> {e[0] + \":\" + \"  \"} <span style={{ color: \"red\" }}>{String(e[1])}</span>  </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUser } from \".././store/reducers/userReducer\"\r\n\r\nfunction LoggedOrNo({ children }) {\r\n    const data = useSelector(state => selectUser(state))\r\n    return data ? children : <div style={{ minHeight: 500 }}> you need to login </div>\r\n}\r\n\r\nexport default LoggedOrNo;\r\n","import './App.css'\r\nimport Header from \"./components/Header\"\r\nimport MainPage from \"./components/pages/mainPage/MainPage\"\r\nimport Footer from \"./components/Footer\"\r\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport FilmReviewPage from \"./components/pages/FilmReviewPage\"\r\nimport BestFilms from \"./components/pages/films/BestFilms\"\r\nimport Expected from \"./components/pages/films/Expected\"\r\nimport PopularFilms from \"./components/pages/films/PopularFilms\"\r\nimport WatchNow from \"./components/pages/films/WatchNow\"\r\nimport PopularMen from \"./components/pages/men/PopularMen\"\r\nimport BestSerials from \"./components/pages/serials/BestSerials\"\r\nimport Live from \"./components/pages/serials/Live\"\r\nimport OnTv from \"./components/pages/serials/OnTv\"\r\nimport PopularSerials from \"./components/pages/serials/PopularSerials\"\r\nimport Api from \"./components/pages/more/Api\"\r\nimport Discussions from \"./components/pages/more/Discussions\"\r\nimport HallofFame from './components/pages/more/HallofFame'\r\nimport Support from \"./components/pages/more/Support\"\r\nimport Login from \"./Login\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { checkUserAuth } from './store/actionCreators/checkUserAuth';\r\nimport { useEffect } from 'react';\r\nimport SearchResultPage from './components/pages/SearchResultPage';\r\nimport Profile from './components/Profile';\r\nimport LoggedOrNo from './components/LoggedOrNo';\r\n\r\nfunction App(props) {\r\n   const dispatch = useDispatch()\r\n\r\n   useEffect(() => {\r\n      dispatch(checkUserAuth())                // чекаем session_id , если есть - получаем User`a и пушим его в redux  //\r\n   }, [])\r\n\r\n   return (\r\n      <div className='container' >\r\n         <Router>\r\n            <Header />\r\n            <div className=\"bodyContainer\">\r\n               <Switch>\r\n                  <Route exact path={\"/\"} component={MainPage} />\r\n                  <Route path={`/movies/:id`} component={FilmReviewPage} />\r\n                  <Route exact path={\"/Expected\"} component={Expected} />\r\n                  <Route exact path={\"/PopularFilms\"} component={PopularFilms} />\r\n                  <Route exact path={\"/WatchNow\"} component={WatchNow} />\r\n                  <Route exact path={\"/PopularMen\"} component={PopularMen} />\r\n                  <Route exact path={\"/Live\"} component={Live} />\r\n                  <Route exact path={\"/OnTv\"} component={OnTv} />\r\n                  <Route exact path={\"/PopularSerials\"} component={PopularSerials} />\r\n                  <Route exact path={\"/Api\"} component={Api} />\r\n                  <Route exact path={\"/HallofFame\"} component={HallofFame} />\r\n                  <Route exact path={\"/Support\"} component={Support} />\r\n                  <Route exact path={\"/login\"} component={Login} />\r\n                  <Route exact path={\"/SearchResultPage\"} component={SearchResultPage} />\r\n                  <LoggedOrNo>\r\n                     <Route exact path={\"/profile\"} component={Profile} />\r\n                     <Route exact path={\"/BestFilms\"} component={BestFilms} />\r\n                     <Route exact path={\"/BestSerials\"} component={BestSerials} />\r\n                     <Route exact path={\"/Discussions\"} component={Discussions} />\r\n                  </LoggedOrNo>\r\n               </Switch >\r\n            </div>\r\n            <Footer />\r\n         </Router>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore, applyMiddleware } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport testReducer from './reducers/testReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({ testReducer: testReducer, userReducer: userReducer })\r\n\r\nexport default createStore(reducer, composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n));\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <Provider store={store}>\r\n         <App />\r\n      </Provider>\r\n   </React.StrictMode>,\r\n   document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}